version: "3.7"
services:

  app:
    build:
      args:
        USER_ID: unicorn
        GROUP_ID: 1000
      context: ./
      dockerfile: ./.docker/app/Dockerfile
    image: laravel-web-app
    container_name: laravel-app
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./:/var/www
      - ./.docker/app/config/php/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
      - ./.docker/app/config/php/local.ini:/usr/local/etc/php/conf.d/local.ini
      - ./.docker/app/data/composer/cache:/home/unicorn/.composer/cache
    networks:
      - laravel-web-app-network

  db:
    image: mysql:5.7.32
    container_name: laravel-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: root
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
    volumes:
      - ./.docker/mysql/config/my.cnf:/etc/mysql/my.cnf
      - ./.docker/mysql/config/initdb:/docker-entrypoint-initdb.d
      - ./.docker/mysql/data:/var/lib/mysql
    networks:
      - laravel-web-app-network

  redis:
    image: redis:5.0.7-alpine
    container_name: laravel-redis
    healthcheck:
      test: redis-cli ping
    networks:
      - laravel-web-app-network

  nginx:
    image: nginx:alpine
    container_name: laravel-nginx
    restart: unless-stopped
    ports:
      - 8001:80
      - 444:443
    volumes:
      - ./:/var/www
      - .docker/nginx/config/conf.d:/etc/nginx/conf.d
      - .docker/nginx/data/logs:/var/log/nginx
      - .docker/nginx/data/cache:/var/cache/nginx
      - .docker/nginx/data/run:/var/run
    networks:
      - laravel-web-app-network

  front:
    image: node:lts-alpine
    container_name: laravel-front
    restart: unless-stopped
    tty: true
    working_dir: /app
    volumes:
      - ./:/app
    networks:
      - laravel-web-app-network

networks:
  laravel-web-app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.100.0/28